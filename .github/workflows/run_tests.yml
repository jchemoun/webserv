name: Run Tests CI

on:
  workflow_dispatch
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]

jobs:
  run_tests:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3



    - run: mkdir -p ~/image-cache
    - id: image-cache
      uses: actions/cache@v3
      with:
          path: ~/image-cache
                  # Adjust key to meet your cache time requirements e.g.
                  # ${{ hashFiles(*) }} can be useful here to invalidate
                  # cache on file changes
          key: image-cache-${{ runner.os }}

    # - if: steps.image-cache.outputs.cache-hit != 'true'
    #   run: |
    #       docker pull mrgittes/webserv
    #       docker save -o ~/image-cache/webserv.tar mrgittes/webserv
    - name: Pull Image
      if: steps.image-cache.outputs.cache-hit != 'true'
      run: docker pull mrgittes/webserv
    - name: Save Image
      if: steps.image-cache.outputs.cache-hit != 'true'
      run: docker save -o ~/image-cache/webserv.tar mrgittes/webserv
    - name: Restore image
      if: steps.image-cache.outputs.cache-hit == 'true'
      run: docker load -i ~/image-cache/webserv.tar




    - name: Install dependencies
      run: sudo apt install -y --no-install-recommends zsh
      
    - name: run tests
      run: make test
